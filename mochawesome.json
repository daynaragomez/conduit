{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 8,
    "pending": 3,
    "failures": 8,
    "start": "2022-04-25T19:03:28.940Z",
    "end": "2022-04-25T19:06:02.708Z",
    "duration": 54050,
    "testsRegistered": 19,
    "passPercent": 42.10526315789474,
    "pendingPercent": 15.789473684210526,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "20d82909-bd37-4a86-a52f-7b8b698d9e59",
      "title": "",
      "fullFile": "cypress/integration/secondTest.spec.js",
      "file": "cypress/integration/secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a6e69b8a-9322-4db7-b8b1-67c9d3035dc0",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 3211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "cf7c26c7-76ee-4dfd-9f72-f3314255a902",
              "parentUUID": "a6e69b8a-9322-4db7-b8b1-67c9d3035dc0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf7c26c7-76ee-4dfd-9f72-f3314255a902"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d2c3ad90-9a7c-4872-9466-552532fd1e51",
      "title": "",
      "fullFile": "cypress/integration/testingD/configSettingEnvironment.spec.js",
      "file": "cypress/integration/testingD/configSettingEnvironment.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 5999,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\configSettingEnvironment.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "263d3914-78ee-4105-bc32-94d0dc7ebebd",
              "parentUUID": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8218de8d-3d1b-4f03-abf4-8f154a9a6b80",
              "parentUUID": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 1214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "235d3374-d761-4bb6-a793-b19a66792387",
              "parentUUID": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1904,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButton => {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "0e11fb60-fd12-4c31-a38e-4cf3f757025c",
              "parentUUID": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nconst bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(token => {\n  //2. second request from articles\n  cy.request({\n    url: Cypress.env('apiUrl2') + 'api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: Cypress.env('apiUrl2') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(body => {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNTAxLCJleHAiOjE2NTYwOTc1MDF9.hq-BmyokRuxYVK8u4tMy85N9zOevC8cuwPluYDBX6ZQ\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 124\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API (Postman)\",\"description\":\"Api testing is easy\",\"body\":\"angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:05:02 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3qZ7vqU8bAWdnkGWPwKQUUXv7oq0SfELxd32%2BXo7Zs%2BvpGDNs2iG97bS%2FamWlaAHcBytN6Q5dEHdpSoH3132%2FQBfr0vLrudGwgl%2BGaq%2F%2FsjdKXdLWzNVTbsE155ROcZiIYIf\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"7019590bcbd38c78-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNTAxLCJleHAiOjE2NTYwOTc1MDF9.hq-BmyokRuxYVK8u4tMy85N9zOevC8cuwPluYDBX6ZQ\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 124\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API (Postman)\",\"description\":\"Api testing is easy\",\"body\":\"angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:05:02 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3qZ7vqU8bAWdnkGWPwKQUUXv7oq0SfELxd32%2BXo7Zs%2BvpGDNs2iG97bS%2FamWlaAHcBytN6Q5dEHdpSoH3132%2FQBfr0vLrudGwgl%2BGaq%2F%2FsjdKXdLWzNVTbsE155ROcZiIYIf\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"7019590bcbd38c78-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:160659:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\configSettingEnvironment.spec.js:200:10)",
                "diff": null
              },
              "uuid": "40494bf7-ee0f-4fbd-8afa-ec3b3d0e7c74",
              "parentUUID": "17657738-e2b5-46fc-a206-ba72bd9d2f34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "235d3374-d761-4bb6-a793-b19a66792387",
            "0e11fb60-fd12-4c31-a38e-4cf3f757025c"
          ],
          "failures": [
            "263d3914-78ee-4105-bc32-94d0dc7ebebd",
            "40494bf7-ee0f-4fbd-8afa-ec3b3d0e7c74"
          ],
          "pending": [
            "8218de8d-3d1b-4f03-abf4-8f154a9a6b80"
          ],
          "skipped": [],
          "duration": 11182,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1dba736-0d3c-423c-88f4-d4389bb6069b",
      "title": "",
      "fullFile": "cypress/integration/testingD/firstTestConduit.spec.js",
      "file": "cypress/integration/testingD/firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9eaf6d9-6edb-44c0-a343-93c24e9b7255",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "06c57bd4-1251-40a3-b392-b99061b4b2a3",
              "parentUUID": "f9eaf6d9-6edb-44c0-a343-93c24e9b7255",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 3264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "93de9fd7-fae6-4b20-a7df-aef1e3a53309",
              "parentUUID": "f9eaf6d9-6edb-44c0-a343-93c24e9b7255",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 2975,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButton => {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "f5dc15ca-16b8-424d-9006-27ba56a869c3",
              "parentUUID": "f9eaf6d9-6edb-44c0-a343-93c24e9b7255",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93de9fd7-fae6-4b20-a7df-aef1e3a53309",
            "f5dc15ca-16b8-424d-9006-27ba56a869c3"
          ],
          "failures": [],
          "pending": [
            "06c57bd4-1251-40a3-b392-b99061b4b2a3"
          ],
          "skipped": [],
          "duration": 6239,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2e9db8a8-fd92-4afa-9cec-defb944de0b2",
      "title": "",
      "fullFile": "cypress/integration/testingD/refactorServerRoute.spec.js",
      "file": "cypress/integration/testingD/refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 8227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "bb1f95f3-a52b-4d97-8573-2da3a7ae046c",
              "parentUUID": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "2795ed94-91c8-4b1a-a07d-75fe64dc4442",
              "parentUUID": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 1765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "ee490b05-57a4-4a22-b8dd-cf50c2e7e92a",
              "parentUUID": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 2578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButton => {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "8034e7d1-aa25-432a-ae66-cb982b5d6973",
              "parentUUID": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2893,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nconst bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(token => {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(body => {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNTYwLCJleHAiOjE2NTYwOTc1NjB9.PL2Sn4W1c8brvPj5ZpQUioYrhvhiAhFV9hTUFCFtqZE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 124\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API (Postman)\",\"description\":\"Api testing is easy\",\"body\":\"angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:06:01 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=o1OdX0%2BJqOSP4UBgjwmLs2%2Be0jBXhnIt5wXCfJ7qnOzlY4iUXLDH4fL2pMCwsSDsBKy8q3XSUbIlCqk9yHP%2Bsfi%2BJnQD19TgG0i92gPYtsPUnbZTljbE2nViaD8mt8fZBhJT\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"70195a7e4e1a8c78-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNTYwLCJleHAiOjE2NTYwOTc1NjB9.PL2Sn4W1c8brvPj5ZpQUioYrhvhiAhFV9hTUFCFtqZE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 124\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API (Postman)\",\"description\":\"Api testing is easy\",\"body\":\"angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:06:01 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=o1OdX0%2BJqOSP4UBgjwmLs2%2Be0jBXhnIt5wXCfJ7qnOzlY4iUXLDH4fL2pMCwsSDsBKy8q3XSUbIlCqk9yHP%2Bsfi%2BJnQD19TgG0i92gPYtsPUnbZTljbE2nViaD8mt8fZBhJT\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"70195a7e4e1a8c78-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:160659:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:200:10)",
                "diff": null
              },
              "uuid": "68d38193-e0f3-4e18-9648-b693a1704073",
              "parentUUID": "adacf4a2-4b18-4be3-8597-0a9e45fbfffa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee490b05-57a4-4a22-b8dd-cf50c2e7e92a",
            "8034e7d1-aa25-432a-ae66-cb982b5d6973"
          ],
          "failures": [
            "bb1f95f3-a52b-4d97-8573-2da3a7ae046c",
            "68d38193-e0f3-4e18-9648-b693a1704073"
          ],
          "pending": [
            "2795ed94-91c8-4b1a-a07d-75fe64dc4442"
          ],
          "skipped": [],
          "duration": 15463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e73dd32d-afd6-42d1-8916-be12157c5365",
      "title": "",
      "fullFile": "cypress/integration/firstTest.spec.js",
      "file": "cypress/integration/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bcc6e148-c1ef-42de-8236-7c22217737e2",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 4985,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "d3da8bef-011c-4272-bb52-466aa33008c9",
              "parentUUID": "bcc6e148-c1ef-42de-8236-7c22217737e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 5519,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)",
                "diff": null
              },
              "uuid": "7fcc0d7c-d865-466a-ba53-1900b17416d3",
              "parentUUID": "bcc6e148-c1ef-42de-8236-7c22217737e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2039,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "7d6e1414-4018-4fd4-97f5-80578fe693c0",
              "parentUUID": "bcc6e148-c1ef-42de-8236-7c22217737e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 3002,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfbuttons => {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "bbc38da4-30c1-4ce8-8e1c-38b389f61c43",
              "parentUUID": "bcc6e148-c1ef-42de-8236-7c22217737e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 2410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(token => {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNDU0LCJleHAiOjE2NTYwOTc0NTR9.bCERqT2xvMb0a7_DU-i-aq3_J-7g8_In4IwfMK5Ra5Y\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:04:15 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=BBUN%2BTn3RQfenuHSySMra96p0meQzdXfbsxCvos2nDcTP1K1ajTajyPmwqgp2nvfcCOzgNDX8F5qj2GUTQaX5slSwzj2iJTpTMVMvchclc9VvieHCl9R5LOChv3B%2F47ytqdl\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"701957e8dfa98c11-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjUwOTEzNDU0LCJleHAiOjE2NTYwOTc0NTR9.bCERqT2xvMb0a7_DU-i-aq3_J-7g8_In4IwfMK5Ra5Y\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.3 Chrome/94.0.4606.81 Electron/15.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Mon, 25 Apr 2022 19:04:15 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=BBUN%2BTn3RQfenuHSySMra96p0meQzdXfbsxCvos2nDcTP1K1ajTajyPmwqgp2nvfcCOzgNDX8F5qj2GUTQaX5slSwzj2iJTpTMVMvchclc9VvieHCl9R5LOChv3B%2F47ytqdl\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"701957e8dfa98c11-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:160659:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "31670359-4423-4fbd-8e03-5456be116ca5",
              "parentUUID": "bcc6e148-c1ef-42de-8236-7c22217737e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d6e1414-4018-4fd4-97f5-80578fe693c0"
          ],
          "failures": [
            "d3da8bef-011c-4272-bb52-466aa33008c9",
            "7fcc0d7c-d865-466a-ba53-1900b17416d3",
            "bbc38da4-30c1-4ce8-8e1c-38b389f61c43",
            "31670359-4423-4fbd-8e03-5456be116ca5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}