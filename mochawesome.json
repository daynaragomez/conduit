{
  "stats": {
    "suites": 31,
    "tests": 113,
    "passes": 61,
    "pending": 17,
    "failures": 35,
    "start": "2022-03-31T16:07:50.763Z",
    "end": "2022-03-31T16:07:50.763Z",
    "duration": 200326,
    "testsRegistered": 113,
    "passPercent": 53.982300884955755,
    "pendingPercent": 15.044247787610619,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3a1f05b3-6350-44ad-8dea-9930a13a84e9",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46836b41-44d0-4637-8301-415d2f72bba5",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 1597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "26670661-f1d8-4075-83fa-a895625210b7",
              "parentUUID": "46836b41-44d0-4637-8301-415d2f72bba5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26670661-f1d8-4075-83fa-a895625210b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc386268-71fc-4973-b82c-8ee1ce8b38fd",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6093bd17-e700-4605-847d-1f21b6c3c5a3",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "83ea60fa-ebaf-4906-928f-29468ace3dd8",
              "parentUUID": "6093bd17-e700-4605-847d-1f21b6c3c5a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "e3b0f6c0-60df-4f0c-a9f1-e802e30f7a41",
              "parentUUID": "6093bd17-e700-4605-847d-1f21b6c3c5a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "4431b423-4bff-4fc3-9b3d-977732edbc22",
              "parentUUID": "6093bd17-e700-4605-847d-1f21b6c3c5a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3b0f6c0-60df-4f0c-a9f1-e802e30f7a41",
            "4431b423-4bff-4fc3-9b3d-977732edbc22"
          ],
          "failures": [],
          "pending": [
            "83ea60fa-ebaf-4906-928f-29468ace3dd8"
          ],
          "skipped": [],
          "duration": 2344,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a23ea2d2-835a-4c71-8433-e84304a8769f",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3917,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "98d0482f-127f-499a-8805-7878a018dae3",
              "parentUUID": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b8b26af0-4f6c-46c6-996f-b0209d04db77",
              "parentUUID": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "a7620fe5-3c29-4f2c-9509-1596a75bfd9b",
              "parentUUID": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "13dfc992-44ae-456f-a113-5d5dbd59cc14",
              "parentUUID": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 1966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "befff521-3f01-4d8a-8598-a4c0ed1d02d7",
              "parentUUID": "9ac98015-e06d-4aee-a9ed-e383401a4e30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7620fe5-3c29-4f2c-9509-1596a75bfd9b",
            "13dfc992-44ae-456f-a113-5d5dbd59cc14",
            "befff521-3f01-4d8a-8598-a4c0ed1d02d7"
          ],
          "failures": [
            "98d0482f-127f-499a-8805-7878a018dae3"
          ],
          "pending": [
            "b8b26af0-4f6c-46c6-996f-b0209d04db77"
          ],
          "skipped": [],
          "duration": 7620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5283c447-9eb4-482e-b454-155ea59d7634",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "293fef51-2431-4af0-bd7f-fef081db6e10",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 2977,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "dcbfaa4e-fae1-4415-97f9-e7488bbb5d2c",
              "parentUUID": "293fef51-2431-4af0-bd7f-fef081db6e10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1NTQwLCJleHAiOjE2NTM3Njk1NDB9.Q0GelXF6oVuaAyZF9Z5OhG_er1eduGonEpF4gQchkRk\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:25:42 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=R9X%2F3CZUjhiDHaLVSXOMPjDohOLZfXEiBTNjHlDDZyISVRMtqUQDZ%2F3lv9vvPGGVdBEXoOvGqsfzNiG7fcamdE1EneYARQHkxvCBYjZmb%2BLivh5I3sPny62k4r6jFVELV3TdO8slwHe4ndbwQw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b561af88e8c35-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1NTQwLCJleHAiOjE2NTM3Njk1NDB9.Q0GelXF6oVuaAyZF9Z5OhG_er1eduGonEpF4gQchkRk\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:25:42 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=R9X%2F3CZUjhiDHaLVSXOMPjDohOLZfXEiBTNjHlDDZyISVRMtqUQDZ%2F3lv9vvPGGVdBEXoOvGqsfzNiG7fcamdE1EneYARQHkxvCBYjZmb%2BLivh5I3sPny62k4r6jFVELV3TdO8slwHe4ndbwQw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b561af88e8c35-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "464fe9a4-fa2f-4849-aa04-123f7f208ef1",
              "parentUUID": "293fef51-2431-4af0-bd7f-fef081db6e10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "987c75a7-4157-498f-a1b5-628ce491d0f3",
              "parentUUID": "293fef51-2431-4af0-bd7f-fef081db6e10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1615,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "6b5004d5-361f-4996-b46f-a347744658e3",
              "parentUUID": "293fef51-2431-4af0-bd7f-fef081db6e10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1NTUxLCJleHAiOjE2NTM3Njk1NTF9.E46ECVssIS-RXlk7fEbypIHnI30elqI0hVbSFbTokxw\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:25:51 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ppfX99X91zpm9zFYs33TpA8H2ShJBkt5vs%2BeZXs4W4f9G4Iwn5mt10o5f3W1uwzYi%2B8gzJrw9xsS6xvG4%2BhvjaS53kUPekCBz45Sk%2ByQO%2BdHbOVD7CAbFi5rptCWJvH7NDB3\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b5652587515ab-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1NTUxLCJleHAiOjE2NTM3Njk1NTF9.E46ECVssIS-RXlk7fEbypIHnI30elqI0hVbSFbTokxw\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:25:51 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ppfX99X91zpm9zFYs33TpA8H2ShJBkt5vs%2BeZXs4W4f9G4Iwn5mt10o5f3W1uwzYi%2B8gzJrw9xsS6xvG4%2BhvjaS53kUPekCBz45Sk%2ByQO%2BdHbOVD7CAbFi5rptCWJvH7NDB3\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b5652587515ab-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "6abf9e2a-dffb-40e9-8098-b008bf8df876",
              "parentUUID": "293fef51-2431-4af0-bd7f-fef081db6e10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "987c75a7-4157-498f-a1b5-628ce491d0f3"
          ],
          "failures": [
            "dcbfaa4e-fae1-4415-97f9-e7488bbb5d2c",
            "464fe9a4-fa2f-4849-aa04-123f7f208ef1",
            "6b5004d5-361f-4996-b46f-a347744658e3",
            "6abf9e2a-dffb-40e9-8098-b008bf8df876"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9923,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7bfe450-8a7a-4494-92cf-4f054738a73a",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "73c973b9-0c12-4e98-bb6d-1491985c910d",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 1558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "bbe035c9-b844-4972-89ad-1637d1a85587",
              "parentUUID": "73c973b9-0c12-4e98-bb6d-1491985c910d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbe035c9-b844-4972-89ad-1637d1a85587"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1558,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c6d65d0-79a5-4952-9412-dca0683ecf57",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a23590d4-f680-49a0-b9cc-13a741a3e7cd",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "7cb1958d-1459-4a56-bc04-986d3ef803b6",
              "parentUUID": "a23590d4-f680-49a0-b9cc-13a741a3e7cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "e1f064ef-eae4-4c3c-974e-fd860d705a57",
              "parentUUID": "a23590d4-f680-49a0-b9cc-13a741a3e7cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "f3e64066-67a7-44e6-bc26-7246bb4d4af4",
              "parentUUID": "a23590d4-f680-49a0-b9cc-13a741a3e7cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1f064ef-eae4-4c3c-974e-fd860d705a57",
            "f3e64066-67a7-44e6-bc26-7246bb4d4af4"
          ],
          "failures": [],
          "pending": [
            "7cb1958d-1459-4a56-bc04-986d3ef803b6"
          ],
          "skipped": [],
          "duration": 2358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d530a5ca-1c64-4b89-ac6c-e6e8a49fc23e",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50d95e1e-8459-483a-9495-fe32b5585533",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {},
              "uuid": "2419f601-101b-4342-9050-1580431a516a",
              "parentUUID": "50d95e1e-8459-483a-9495-fe32b5585533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "c400c599-dcce-44ae-9da7-39202c93959f",
              "parentUUID": "50d95e1e-8459-483a-9495-fe32b5585533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "9acec0ee-d617-42f5-a4d8-cd470a47c2e8",
              "parentUUID": "50d95e1e-8459-483a-9495-fe32b5585533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 936,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "0398d1b2-3d4e-41de-a110-769543b2b5a3",
              "parentUUID": "50d95e1e-8459-483a-9495-fe32b5585533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 1874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "70425e58-bff6-4a07-a900-a4a24ddfcbe1",
              "parentUUID": "50d95e1e-8459-483a-9495-fe32b5585533",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2419f601-101b-4342-9050-1580431a516a",
            "9acec0ee-d617-42f5-a4d8-cd470a47c2e8",
            "0398d1b2-3d4e-41de-a110-769543b2b5a3",
            "70425e58-bff6-4a07-a900-a4a24ddfcbe1"
          ],
          "failures": [],
          "pending": [
            "c400c599-dcce-44ae-9da7-39202c93959f"
          ],
          "skipped": [],
          "duration": 7371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "97329d5b-81e6-4e09-aa92-b51ee88dcc3c",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 17461,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'statusCode')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'statusCode')\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:27)",
                "diff": null
              },
              "uuid": "d84128d1-610a-4cea-9ec2-9bcd69c29ff1",
              "parentUUID": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 2792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read properties of undefined (reading 'description')\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"99\\\", \\\"Google Chrome\\\";v=\\\"99\\\"\",\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg3MzI1LCJleHAiOjE2NTM3NzEzMjV9.KiDFuuUfyH0RUpTjhftrOt_vPurQG3uU3MoczezNVbw\",\n    \"sec-ch-ua-mobile\": \"?0\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.84 Safari/537.36\",\n    \"sec-ch-ua-platform\": \"\\\"Windows\\\"\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US,en;q=0.9\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:55:27 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=51rQSoMEStaa%2FEGZIWvsQjJPzGsZrY4MiZdbQ6FB7iOpHJrEVWqKgdfd8kJRU6NCMBkkXkv3Sx8kC39qj%2F7HYN15R9wadQDNJfTdrIXq44ogduqqcOqvbgyCZjvjxqRQBbciu6Nl%2BHboXCxEig%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b81ab6d751821-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read properties of undefined (reading 'description')\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"99\\\", \\\"Google Chrome\\\";v=\\\"99\\\"\",\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg3MzI1LCJleHAiOjE2NTM3NzEzMjV9.KiDFuuUfyH0RUpTjhftrOt_vPurQG3uU3MoczezNVbw\",\n    \"sec-ch-ua-mobile\": \"?0\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.84 Safari/537.36\",\n    \"sec-ch-ua-platform\": \"\\\"Windows\\\"\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US,en;q=0.9\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:55:27 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=51rQSoMEStaa%2FEGZIWvsQjJPzGsZrY4MiZdbQ6FB7iOpHJrEVWqKgdfd8kJRU6NCMBkkXkv3Sx8kC39qj%2F7HYN15R9wadQDNJfTdrIXq44ogduqqcOqvbgyCZjvjxqRQBbciu6Nl%2BHboXCxEig%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b81ab6d751821-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\n\nFrom response callback:\n  TypeError: Cannot read properties of undefined (reading 'description')\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)",
                "diff": null
              },
              "uuid": "98bc6410-d0be-4ac3-91e9-e45f5b5e483d",
              "parentUUID": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "af89b647-3289-4fe1-9cf1-669ea5141ff3",
              "parentUUID": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:160:39)",
                "diff": null
              },
              "uuid": "b5633016-d2b7-416a-805d-08cd0e1a17ee",
              "parentUUID": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 967,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg3MzM0LCJleHAiOjE2NTM3NzEzMzR9.-W1TvmgEoPp754PcWy_QS86r-cwajEqMuu0NUp1P_g8\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.84 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:55:34 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=amgg7R9u90wJxcniVfcs37BGCwVEQlpH4CvBttGP6R7zCT%2BzMd76yF4hFv4byBMeXaLvDfZW%2BnCMnfTT8xfAYvCdTtdUpkXFF9ZDCgrbwWe2xQi5Lw5GL12RB7R0ifjMBTCf\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b81da0943178c-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg3MzM0LCJleHAiOjE2NTM3NzEzMzR9.-W1TvmgEoPp754PcWy_QS86r-cwajEqMuu0NUp1P_g8\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.84 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:55:34 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=amgg7R9u90wJxcniVfcs37BGCwVEQlpH4CvBttGP6R7zCT%2BzMd76yF4hFv4byBMeXaLvDfZW%2BnCMnfTT8xfAYvCdTtdUpkXFF9ZDCgrbwWe2xQi5Lw5GL12RB7R0ifjMBTCf\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b81da0943178c-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)",
                "diff": null
              },
              "uuid": "326c1623-d834-4a63-8278-045bbfe91e47",
              "parentUUID": "0d7d0069-ebd6-4910-aba6-508eb6ea3f8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af89b647-3289-4fe1-9cf1-669ea5141ff3"
          ],
          "failures": [
            "d84128d1-610a-4cea-9ec2-9bcd69c29ff1",
            "98bc6410-d0be-4ac3-91e9-e45f5b5e483d",
            "b5633016-d2b7-416a-805d-08cd0e1a17ee",
            "326c1623-d834-4a63-8278-045bbfe91e47"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fdb74ed-da04-49d8-9891-58ee0aacaf44",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b7eef5e-da31-4f36-bd54-ed0d700eee93",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 2099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "41300f3f-ff22-4d82-8699-030533ef3e25",
              "parentUUID": "4b7eef5e-da31-4f36-bd54-ed0d700eee93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41300f3f-ff22-4d82-8699-030533ef3e25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2099,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ac1a047-b010-467f-8c2a-bfa1ce62d413",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6773fdd0-530b-4e53-8ed8-fe11c397f100",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8345e9ca-3c1b-4bac-b47e-558fcc7becca",
              "parentUUID": "6773fdd0-530b-4e53-8ed8-fe11c397f100",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "24efaaed-2f07-40bc-bccc-a45be97c426e",
              "parentUUID": "6773fdd0-530b-4e53-8ed8-fe11c397f100",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "c428eb62-df60-41f1-bf3c-fe9212dbd7c1",
              "parentUUID": "6773fdd0-530b-4e53-8ed8-fe11c397f100",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24efaaed-2f07-40bc-bccc-a45be97c426e",
            "c428eb62-df60-41f1-bf3c-fe9212dbd7c1"
          ],
          "failures": [],
          "pending": [
            "8345e9ca-3c1b-4bac-b47e-558fcc7becca"
          ],
          "skipped": [],
          "duration": 2922,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "62162ad2-d87e-4414-8ce5-0c2026423c7c",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93f14770-938c-4971-8c22-c578e42d1cfd",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 4243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {},
              "uuid": "52d84b04-a8c3-4d82-9056-3fe5ae89881f",
              "parentUUID": "93f14770-938c-4971-8c22-c578e42d1cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "bd9a0161-1761-4b9c-af4c-b839b2f82c47",
              "parentUUID": "93f14770-938c-4971-8c22-c578e42d1cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "85df2fb7-aba3-48b7-9063-4c61c7efc0bc",
              "parentUUID": "93f14770-938c-4971-8c22-c578e42d1cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "513a9e0b-dfb2-4ce9-90b4-7ccdeb05e794",
              "parentUUID": "93f14770-938c-4971-8c22-c578e42d1cfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'Request from API (Postman)' to not equal 'Request from API (Postman)'",
                "estack": "AssertionError: expected 'Request from API (Postman)' to not equal 'Request from API (Postman)'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:225:22)",
                "diff": ""
              },
              "uuid": "2a55c610-66a2-4ea8-98c4-e015bc1b25b7",
              "parentUUID": "93f14770-938c-4971-8c22-c578e42d1cfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52d84b04-a8c3-4d82-9056-3fe5ae89881f",
            "85df2fb7-aba3-48b7-9063-4c61c7efc0bc",
            "513a9e0b-dfb2-4ce9-90b4-7ccdeb05e794"
          ],
          "failures": [
            "2a55c610-66a2-4ea8-98c4-e015bc1b25b7"
          ],
          "pending": [
            "bd9a0161-1761-4b9c-af4c-b839b2f82c47"
          ],
          "skipped": [],
          "duration": 7854,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "81d2a923-072f-49fa-9fc2-490c0a6f9032",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "16f6ffaf-7c7a-439f-b1ec-c101ba5e6e61",
              "parentUUID": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3160,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4MjE4LCJleHAiOjE2NTM4NDIyMTh9.M61gNtsYWYScdmbuaaeZ_EeE5lq0rbqQ9MWDv856NBY\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:37:00 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=nid8TC8RXJ8O%2B%2FfgHfSNJk8b5m6Dog0C07dRoQAsQENq5D6P2TKUaekEv3oXc5R5%2BJxiGm9Q9Da%2Frbw3kexDc96mORtbk8pLeyWNrEZ7JEr54PAUOZEYrbTpyR0rMj7iNrw%2F76mcz3eBt%2FoqYg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f4244756989eff5-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4MjE4LCJleHAiOjE2NTM4NDIyMTh9.M61gNtsYWYScdmbuaaeZ_EeE5lq0rbqQ9MWDv856NBY\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:37:00 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=nid8TC8RXJ8O%2B%2FfgHfSNJk8b5m6Dog0C07dRoQAsQENq5D6P2TKUaekEv3oXc5R5%2BJxiGm9Q9Da%2Frbw3kexDc96mORtbk8pLeyWNrEZ7JEr54PAUOZEYrbTpyR0rMj7iNrw%2F76mcz3eBt%2FoqYg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f4244756989eff5-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "89de7176-384a-451e-a0fe-1d613114ae58",
              "parentUUID": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "625e1430-c4a2-43c7-99c0-a9765c046dde",
              "parentUUID": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1481,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "af2a0134-58a3-4ca6-bdc8-170adb1c53ab",
              "parentUUID": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1513,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4MjI5LCJleHAiOjE2NTM4NDIyMjl9.CxW4Elg1Z7dHDu7AEieenSt6_JSkG-p9tOBecx6VDbc\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:37:10 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=IXgudMqV%2Bb%2F7Tb6VEsQIIkc8YVQhOGcqX9q9%2F8KdGwRNfULuKz8fWVSvN7Cqa2yDrqKWpEU%2FyNI8%2FE9RR53E%2BfMED8hOE0991y%2F4z25xUplGy%2FrKZ%2BICJi8k7b%2F%2Fuusr4oqF\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f4244b15fcf179d-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4MjI5LCJleHAiOjE2NTM4NDIyMjl9.CxW4Elg1Z7dHDu7AEieenSt6_JSkG-p9tOBecx6VDbc\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:37:10 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=IXgudMqV%2Bb%2F7Tb6VEsQIIkc8YVQhOGcqX9q9%2F8KdGwRNfULuKz8fWVSvN7Cqa2yDrqKWpEU%2FyNI8%2FE9RR53E%2BfMED8hOE0991y%2F4z25xUplGy%2FrKZ%2BICJi8k7b%2F%2Fuusr4oqF\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f4244b15fcf179d-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "d0df4e23-e778-44c4-bc41-d568aeb780bb",
              "parentUUID": "cb7f73c8-62d6-4747-994e-b098ddbdd91e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "625e1430-c4a2-43c7-99c0-a9765c046dde"
          ],
          "failures": [
            "16f6ffaf-7c7a-439f-b1ec-c101ba5e6e61",
            "89de7176-384a-451e-a0fe-1d613114ae58",
            "af2a0134-58a3-4ca6-bdc8-170adb1c53ab",
            "d0df4e23-e778-44c4-bc41-d568aeb780bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ed5f937a-27c1-4668-84a2-69ed04a7a7fa",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96970cc4-6920-4624-a4c1-26550a76dded",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 1778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "aa401c9b-5a2d-424b-ac73-8595da33e31c",
              "parentUUID": "96970cc4-6920-4624-a4c1-26550a76dded",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa401c9b-5a2d-424b-ac73-8595da33e31c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8db3ae05-150d-46df-886d-23aecbe9e851",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ddf0a214-7a96-412c-937b-4def5eaee386",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "cef2ace1-8801-414b-9c64-da0f5b2efec1",
              "parentUUID": "ddf0a214-7a96-412c-937b-4def5eaee386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "3785bb1f-fa21-4e74-91fd-024f64e279f7",
              "parentUUID": "ddf0a214-7a96-412c-937b-4def5eaee386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "756872f0-0dd7-4ea7-91f8-f4b8d1dc074c",
              "parentUUID": "ddf0a214-7a96-412c-937b-4def5eaee386",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3785bb1f-fa21-4e74-91fd-024f64e279f7",
            "756872f0-0dd7-4ea7-91f8-f4b8d1dc074c"
          ],
          "failures": [],
          "pending": [
            "cef2ace1-8801-414b-9c64-da0f5b2efec1"
          ],
          "skipped": [],
          "duration": 2277,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "952d4cdc-7869-4313-8518-2c78b2a3271a",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3924,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "0800c164-356b-4d5f-aae4-53f06a706874",
              "parentUUID": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "9776f254-2078-4cf8-9576-e3c48cea72b2",
              "parentUUID": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "806bf472-6807-4247-86ea-5eeb45e920c2",
              "parentUUID": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "639c9379-890b-44ca-aaaf-37ced665aa85",
              "parentUUID": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "1e8cde57-fad3-4909-a373-af6657771025",
              "parentUUID": "c9dfbe0e-76d8-416c-a9b1-95e6ff8cbe21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "806bf472-6807-4247-86ea-5eeb45e920c2",
            "639c9379-890b-44ca-aaaf-37ced665aa85",
            "1e8cde57-fad3-4909-a373-af6657771025"
          ],
          "failures": [
            "0800c164-356b-4d5f-aae4-53f06a706874"
          ],
          "pending": [
            "9776f254-2078-4cf8-9576-e3c48cea72b2"
          ],
          "skipped": [],
          "duration": 7877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "70e7f181-62fa-4e2c-b111-67bc6d3fe309",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "4437cbbc-763c-4c0f-8584-5007fa18e601",
              "parentUUID": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3128,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NDgwLCJleHAiOjE2NTM4NDI0ODB9.aJvq-Pa1LXScEI3SA-SlwS8vSphqhUcRmbkSTVgYCGk\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:41:22 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=WTqWBDFjdgW2YpWVPoKBtpAXoIi%2FGaBZkQOqCaBmN3sZKKevrht3ljVWoHzexK1ojCJ35egQw5jUAhkQQuifyrn84MFN%2F9IevGRE7cEC0OCG3lXc9vCTiggN11LgcJJbHG3sfTt%2Bh6I%2BTCQC1w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f424adba89f1821-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NDgwLCJleHAiOjE2NTM4NDI0ODB9.aJvq-Pa1LXScEI3SA-SlwS8vSphqhUcRmbkSTVgYCGk\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:41:22 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=WTqWBDFjdgW2YpWVPoKBtpAXoIi%2FGaBZkQOqCaBmN3sZKKevrht3ljVWoHzexK1ojCJ35egQw5jUAhkQQuifyrn84MFN%2F9IevGRE7cEC0OCG3lXc9vCTiggN11LgcJJbHG3sfTt%2Bh6I%2BTCQC1w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f424adba89f1821-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "717270f8-bd87-40e6-9376-07c6fb57d7a4",
              "parentUUID": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "62ac7f78-8c87-4f92-8b53-bb1d9ee9c4b7",
              "parentUUID": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1496,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "b5923ec4-1ce4-497e-af64-a2ed7150bdee",
              "parentUUID": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NDkxLCJleHAiOjE2NTM4NDI0OTF9.KqYucss1pYIzhKdP9wOadQMpEUsG8xRc8Zn3jp-JsUk\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:41:32 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=dPNdHOKr920gZn9NtK3Obe8d7Xx6zBck%2FK1tv9hkQnmHtn%2FlVmtmondJhRDQquVPJVEMCiUmO%2BT80y5ZTO%2FDnmteYM6gNfUIqCS4pkLcbEW3eSHiqUO%2FSQ4Ba4%2F11DnxB1zY\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f424b166b1678ed-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NDkxLCJleHAiOjE2NTM4NDI0OTF9.KqYucss1pYIzhKdP9wOadQMpEUsG8xRc8Zn3jp-JsUk\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:41:32 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=dPNdHOKr920gZn9NtK3Obe8d7Xx6zBck%2FK1tv9hkQnmHtn%2FlVmtmondJhRDQquVPJVEMCiUmO%2BT80y5ZTO%2FDnmteYM6gNfUIqCS4pkLcbEW3eSHiqUO%2FSQ4Ba4%2F11DnxB1zY\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f424b166b1678ed-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "86ea70bc-25cb-4689-b373-a8f9a8a584fb",
              "parentUUID": "45ec66ad-5f33-4ce2-83f0-136ce4ac5624",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62ac7f78-8c87-4f92-8b53-bb1d9ee9c4b7"
          ],
          "failures": [
            "4437cbbc-763c-4c0f-8584-5007fa18e601",
            "717270f8-bd87-40e6-9376-07c6fb57d7a4",
            "b5923ec4-1ce4-497e-af64-a2ed7150bdee",
            "86ea70bc-25cb-4689-b373-a8f9a8a584fb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30420d18-f2f1-47cc-a819-7c9ed10cd65a",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a9ad806-6233-46e2-8ff1-6bc913fd4c1e",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 2052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "afdb83d4-c5d8-4753-9cee-4453313865b3",
              "parentUUID": "8a9ad806-6233-46e2-8ff1-6bc913fd4c1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afdb83d4-c5d8-4753-9cee-4453313865b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2052,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2b19ec2-829e-418f-a0ea-d0de8de3a178",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b68ea8bd-e797-4c74-b9bc-90202f64943a",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "69d63c02-1d9c-4baf-907c-b2947c06bf6a",
              "parentUUID": "b68ea8bd-e797-4c74-b9bc-90202f64943a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "aba47844-3ec8-478a-a7f1-a741d301ebfa",
              "parentUUID": "b68ea8bd-e797-4c74-b9bc-90202f64943a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "64df6b84-875b-4082-a788-8197bbd4c6ba",
              "parentUUID": "b68ea8bd-e797-4c74-b9bc-90202f64943a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aba47844-3ec8-478a-a7f1-a741d301ebfa",
            "64df6b84-875b-4082-a788-8197bbd4c6ba"
          ],
          "failures": [],
          "pending": [
            "69d63c02-1d9c-4baf-907c-b2947c06bf6a"
          ],
          "skipped": [],
          "duration": 2428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a703d8f2-c067-420c-9d79-19a514eb92de",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "313176a8-e339-4db6-b658-b50e102bbc71",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3985,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "eb743a80-2c0b-4b29-80f0-e796c9580405",
              "parentUUID": "313176a8-e339-4db6-b658-b50e102bbc71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "05f06a0f-c973-45f7-ab2d-79da792f618b",
              "parentUUID": "313176a8-e339-4db6-b658-b50e102bbc71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "cf23186b-c48a-4fd5-8878-523a24195df6",
              "parentUUID": "313176a8-e339-4db6-b658-b50e102bbc71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 970,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "8cc11a79-2505-476e-885a-03f4705662c9",
              "parentUUID": "313176a8-e339-4db6-b658-b50e102bbc71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 1857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "1e6d0a16-d549-485a-946c-fe793a974fa6",
              "parentUUID": "313176a8-e339-4db6-b658-b50e102bbc71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf23186b-c48a-4fd5-8878-523a24195df6",
            "8cc11a79-2505-476e-885a-03f4705662c9",
            "1e6d0a16-d549-485a-946c-fe793a974fa6"
          ],
          "failures": [
            "eb743a80-2c0b-4b29-80f0-e796c9580405"
          ],
          "pending": [
            "05f06a0f-c973-45f7-ab2d-79da792f618b"
          ],
          "skipped": [],
          "duration": 7693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "181db5af-c0b5-44c4-94f9-eed5dd4d5aab",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "15ddaa41-24d0-4511-8271-2c374be42bc2",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3094,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "b1f4a929-1901-49e1-b351-51caaaeb77a7",
              "parentUUID": "15ddaa41-24d0-4511-8271-2c374be42bc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NjY3LCJleHAiOjE2NTM4NDI2Njd9.tRHzZKnmNb90bOSyVdJC38im29TqMkCFSpeAfC0AZo0\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:44:29 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=27XmncipR6EqhHURJ1U13z1LTmBYPwd4yrUdWgvNXfvhLd5yuBWosbvMdZVmVnupKMSzg1Uvk3JqIxRO5OaIu0RHtvpTVpqajoAFvZqUyeciNj3tRXG3Yy4v6peTWcK0isbqzNoWF1YPN6Ug0A%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f424f6f1f08e6ec-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4NjY3LCJleHAiOjE2NTM4NDI2Njd9.tRHzZKnmNb90bOSyVdJC38im29TqMkCFSpeAfC0AZo0\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 16:44:29 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=27XmncipR6EqhHURJ1U13z1LTmBYPwd4yrUdWgvNXfvhLd5yuBWosbvMdZVmVnupKMSzg1Uvk3JqIxRO5OaIu0RHtvpTVpqajoAFvZqUyeciNj3tRXG3Yy4v6peTWcK0isbqzNoWF1YPN6Ug0A%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f424f6f1f08e6ec-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "9d289209-f13d-4d97-ac23-e52f82f01b99",
              "parentUUID": "15ddaa41-24d0-4511-8271-2c374be42bc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "b21c05b4-bbc3-4747-8aad-a990afd9a7a3",
              "parentUUID": "15ddaa41-24d0-4511-8271-2c374be42bc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1677,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "a76341cf-b11d-48bd-b000-857e0991282e",
              "parentUUID": "15ddaa41-24d0-4511-8271-2c374be42bc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1545,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4Njc5LCJleHAiOjE2NTM4NDI2Nzl9.byohachz6ziFSpEJ7quCG6cnZvZ4f_jtAeW0eWEP3JE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:44:39 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JgtUfW1j7JDJpVx0YgTpUWlduuK7sW%2FJBdz%2FsFvT9UwLLKs5MqCSzqfcCD01%2FBQLtzGI9rMlKBchjLwjp6xKRL4YOCr%2B2utHnLfk3N%2FVrDMEvqs%2FoqmPY%2FRT%2FhaMPruJFcx6\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f424fad1c5b0cb5-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjU4Njc5LCJleHAiOjE2NTM4NDI2Nzl9.byohachz6ziFSpEJ7quCG6cnZvZ4f_jtAeW0eWEP3JE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 16:44:39 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JgtUfW1j7JDJpVx0YgTpUWlduuK7sW%2FJBdz%2FsFvT9UwLLKs5MqCSzqfcCD01%2FBQLtzGI9rMlKBchjLwjp6xKRL4YOCr%2B2utHnLfk3N%2FVrDMEvqs%2FoqmPY%2FRT%2FhaMPruJFcx6\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f424fad1c5b0cb5-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "86e08fe7-eee1-43ca-bfd4-6e5f5f87d59c",
              "parentUUID": "15ddaa41-24d0-4511-8271-2c374be42bc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b21c05b4-bbc3-4747-8aad-a990afd9a7a3"
          ],
          "failures": [
            "b1f4a929-1901-49e1-b351-51caaaeb77a7",
            "9d289209-f13d-4d97-ac23-e52f82f01b99",
            "a76341cf-b11d-48bd-b000-857e0991282e",
            "86e08fe7-eee1-43ca-bfd4-6e5f5f87d59c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10971,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "999d9563-683e-4eb2-9fe1-a64cd65d06da",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37dbb248-1fc8-4276-850f-339743a93ea0",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 1923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "cb569862-a667-4260-9152-d9c5adee311e",
              "parentUUID": "37dbb248-1fc8-4276-850f-339743a93ea0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb569862-a667-4260-9152-d9c5adee311e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1923,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66f5f2b9-ba53-41ad-aea1-2a6b1633fd98",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5eda137e-cee4-442b-922f-da4474751c0e",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b6112c11-ee3c-45da-8e22-6819e11fe845",
              "parentUUID": "5eda137e-cee4-442b-922f-da4474751c0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "ea3d5754-ddaf-470e-a76e-472fefe58856",
              "parentUUID": "5eda137e-cee4-442b-922f-da4474751c0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "db1f1eba-77e7-4c57-b99a-ccad0d732ab2",
              "parentUUID": "5eda137e-cee4-442b-922f-da4474751c0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea3d5754-ddaf-470e-a76e-472fefe58856",
            "db1f1eba-77e7-4c57-b99a-ccad0d732ab2"
          ],
          "failures": [],
          "pending": [
            "b6112c11-ee3c-45da-8e22-6819e11fe845"
          ],
          "skipped": [],
          "duration": 2602,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2bf7a0c9-b51f-4a31-be22-985057c37718",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 4192,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "869f7543-87ff-4e9f-8de6-4cfc78aea55e",
              "parentUUID": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "c1660774-9869-43d4-8b77-ff774c6fd2b1",
              "parentUUID": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "7136d5ea-82ef-4a13-9636-607eeffaa877",
              "parentUUID": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1088,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "f79cbc50-1fbe-406c-9ef6-8df17348ac0e",
              "parentUUID": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "a3b880ec-3729-4e86-9222-99d2d9550d7c",
              "parentUUID": "1aa7fbe9-4b2a-45f0-91c8-213dd4b326f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7136d5ea-82ef-4a13-9636-607eeffaa877",
            "f79cbc50-1fbe-406c-9ef6-8df17348ac0e",
            "a3b880ec-3729-4e86-9222-99d2d9550d7c"
          ],
          "failures": [
            "869f7543-87ff-4e9f-8de6-4cfc78aea55e"
          ],
          "pending": [
            "c1660774-9869-43d4-8b77-ff774c6fd2b1"
          ],
          "skipped": [],
          "duration": 8487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6a6fb108-4e42-4671-8c88-c5d512096981",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3968,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "bfebae18-5990-44b5-b04c-664591119599",
              "parentUUID": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d24c1434-6841-4e30-b0ea-f666eba03194",
              "parentUUID": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "5d993c1d-7d2c-4996-a60b-ea2f2dab39bf",
              "parentUUID": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "1ded174f-b7c6-45d2-b5dc-50a5dca7093d",
              "parentUUID": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "28bfcce8-95fc-4a36-83b8-ed547cb9d21e",
              "parentUUID": "c2a9b85c-14fe-43e5-b7e3-7ee9a3eb8011",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d993c1d-7d2c-4996-a60b-ea2f2dab39bf",
            "1ded174f-b7c6-45d2-b5dc-50a5dca7093d",
            "28bfcce8-95fc-4a36-83b8-ed547cb9d21e"
          ],
          "failures": [
            "bfebae18-5990-44b5-b04c-664591119599"
          ],
          "pending": [
            "d24c1434-6841-4e30-b0ea-f666eba03194"
          ],
          "skipped": [],
          "duration": 7763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "41b1ae32-7063-4398-bf47-415994e87b4c",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "109a74e6-cf51-47a5-9370-760a5814a5b8",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 4070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {
                "message": "AssertionError: expected 422 to equal 200",
                "estack": "AssertionError: expected 422 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\testingD\\refactorServerRoute.spec.js:124:42)",
                "diff": "- 422\n+ 200\n"
              },
              "uuid": "fbce3c3f-4eab-4edd-ae6b-691c9eceb7f1",
              "parentUUID": "109a74e6-cf51-47a5-9370-760a5814a5b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "0d151940-b569-491b-ae02-6cd3771140ab",
              "parentUUID": "109a74e6-cf51-47a5-9370-760a5814a5b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "a1f58f64-6386-4198-a00f-0fceaa9880c6",
              "parentUUID": "109a74e6-cf51-47a5-9370-760a5814a5b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "19adb6db-a18d-4572-8568-40be9146ee6b",
              "parentUUID": "109a74e6-cf51-47a5-9370-760a5814a5b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 3076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "72bed5eb-20a8-4d8f-9b45-177b39080fc3",
              "parentUUID": "109a74e6-cf51-47a5-9370-760a5814a5b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1f58f64-6386-4198-a00f-0fceaa9880c6",
            "19adb6db-a18d-4572-8568-40be9146ee6b",
            "72bed5eb-20a8-4d8f-9b45-177b39080fc3"
          ],
          "failures": [
            "fbce3c3f-4eab-4edd-ae6b-691c9eceb7f1"
          ],
          "pending": [
            "0d151940-b569-491b-ae02-6cd3771140ab"
          ],
          "skipped": [],
          "duration": 9321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4a1c074d-fef1-41d1-b58d-ccba784466d6",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f761103b-0b4c-4fde-8b44-726977bef179",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 5386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {},
              "uuid": "ccccdb11-17d1-4504-b331-8b949a038f26",
              "parentUUID": "f761103b-0b4c-4fde-8b44-726977bef179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "41f8d963-7b2f-41e7-9793-c9c50e428b86",
              "parentUUID": "f761103b-0b4c-4fde-8b44-726977bef179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 1037,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "4513e8dc-1f12-4767-bfce-71f395a9ce96",
              "parentUUID": "f761103b-0b4c-4fde-8b44-726977bef179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "a526831c-e4af-4277-afb6-343c032128d3",
              "parentUUID": "f761103b-0b4c-4fde-8b44-726977bef179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 2307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "a1b726a3-8249-482a-bf1a-30b034d56fd0",
              "parentUUID": "f761103b-0b4c-4fde-8b44-726977bef179",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccccdb11-17d1-4504-b331-8b949a038f26",
            "4513e8dc-1f12-4767-bfce-71f395a9ce96",
            "a526831c-e4af-4277-afb6-343c032128d3",
            "a1b726a3-8249-482a-bf1a-30b034d56fd0"
          ],
          "failures": [],
          "pending": [
            "41f8d963-7b2f-41e7-9793-c9c50e428b86"
          ],
          "skipped": [],
          "duration": 10180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec64b404-7c66-4227-b0be-06975e5b0e8e",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c122b002-0280-4757-8335-340beb097f4a",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3668,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "46ca52ea-7074-4194-8c4f-6bef10522cd9",
              "parentUUID": "c122b002-0280-4757-8335-340beb097f4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3140,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjYzMTc2LCJleHAiOjE2NTM4NDcxNzZ9.1xICtr9OYKZh5GrfCb0V4q_BAztk6WhG6od6GFco1GE\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 17:59:38 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=DFsVEg8ftbWBoZBedarPcyQUW3W7wyeU3wD92UuwbFGvB7Jv4ANbxhjkIx1jtooK0d%2B1aIfsYnBidZhEsHKRb4ceSfATm1GZ6a3J3%2FXgQAuKL8PaIq3EpyHQDyoLuknrksZ5TBH5peWD440YCg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f42bd809f6c8c1e-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjYzMTc2LCJleHAiOjE2NTM4NDcxNzZ9.1xICtr9OYKZh5GrfCb0V4q_BAztk6WhG6od6GFco1GE\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Wed, 30 Mar 2022 17:59:38 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=DFsVEg8ftbWBoZBedarPcyQUW3W7wyeU3wD92UuwbFGvB7Jv4ANbxhjkIx1jtooK0d%2B1aIfsYnBidZhEsHKRb4ceSfATm1GZ6a3J3%2FXgQAuKL8PaIq3EpyHQDyoLuknrksZ5TBH5peWD440YCg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f42bd809f6c8c1e-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "4e862786-9d44-45e1-a2db-05adda0fe0ec",
              "parentUUID": "c122b002-0280-4757-8335-340beb097f4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "1be3b3e8-4fd8-4b0b-bbf3-05d1ab77e32b",
              "parentUUID": "c122b002-0280-4757-8335-340beb097f4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1525,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "81f7b7e1-b784-451e-8eae-ef7501ca3a44",
              "parentUUID": "c122b002-0280-4757-8335-340beb097f4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjYzMTg3LCJleHAiOjE2NTM4NDcxODd9.tqVnuDtDNRO1UcrkoeI0jRTvJDaofYnxULXX_0A_2Js\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 17:59:47 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=NEFxpv%2FPwrDUPMhfOzHe9qbwie32jv%2FeljCWv6Uo5TOxCYl5lEMzMp9yhwgOg4LlQy6nVH%2FxSmZNmt0b0EOIEP0QV7Fl0%2FU6BED5f67c4ZT5VF8BtXULWNtCECSEf1Rc7Jly\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f42bdbb2b0918b1-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NjYzMTg3LCJleHAiOjE2NTM4NDcxODd9.tqVnuDtDNRO1UcrkoeI0jRTvJDaofYnxULXX_0A_2Js\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Wed, 30 Mar 2022 17:59:47 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=NEFxpv%2FPwrDUPMhfOzHe9qbwie32jv%2FeljCWv6Uo5TOxCYl5lEMzMp9yhwgOg4LlQy6nVH%2FxSmZNmt0b0EOIEP0QV7Fl0%2FU6BED5f67c4ZT5VF8BtXULWNtCECSEf1Rc7Jly\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f42bdbb2b0918b1-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "df14914a-00f0-4547-b83e-0a73e193dae9",
              "parentUUID": "c122b002-0280-4757-8335-340beb097f4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1be3b3e8-4fd8-4b0b-bbf3-05d1ab77e32b"
          ],
          "failures": [
            "46ca52ea-7074-4194-8c4f-6bef10522cd9",
            "4e862786-9d44-45e1-a2db-05adda0fe0ec",
            "81f7b7e1-b784-451e-8eae-ef7501ca3a44",
            "df14914a-00f0-4547-b83e-0a73e193dae9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3ab67fa5-45b3-41bc-8ba0-db13503b4966",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f6d67dee-b516-4785-9fc2-e8454b13bbc4",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 2276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "cfbe3089-73f5-4373-91a9-efcae3d82e0d",
              "parentUUID": "f6d67dee-b516-4785-9fc2-e8454b13bbc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfbe3089-73f5-4373-91a9-efcae3d82e0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2276,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "429ccf32-274f-4b33-9626-e7129ebe5055",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "file": "cypress\\integration\\testingD\\firstTestConduit.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7cc5cb7a-c78b-4026-b2e1-7d6a78acd370",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "fc185fc7-8315-4533-9982-cb435a3228da",
              "parentUUID": "7cc5cb7a-c78b-4026-b2e1-7d6a78acd370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend should gave tags with routing object ",
              "timedOut": null,
              "duration": 1500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "f29af369-a485-45c1-8b88-ca6400d5beaf",
              "parentUUID": "7cc5cb7a-c78b-4026-b2e1-7d6a78acd370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend Verify the local feed likes count",
              "timedOut": null,
              "duration": 1489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "c7c9d6ee-9814-4a0f-bb64-8c3ec0828463",
              "parentUUID": "7cc5cb7a-c78b-4026-b2e1-7d6a78acd370",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f29af369-a485-45c1-8b88-ca6400d5beaf",
            "c7c9d6ee-9814-4a0f-bb64-8c3ec0828463"
          ],
          "failures": [],
          "pending": [
            "fc185fc7-8315-4533-9982-cb435a3228da"
          ],
          "skipped": [],
          "duration": 2989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "98daa208-9a7b-47e4-938c-79d2416e7f66",
      "title": "",
      "fullFile": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "file": "cypress\\integration\\testingD\\refactorServerRoute.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
          "title": "Test with backend / refactoring use intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend / refactoring use intercept verify correct request and response",
              "timedOut": null,
              "duration": 3995,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.server() //crear el servidorde cypress\ncy.intercept('POST', '**/api.realworld.io/api/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('GitHub ');\ncy.get('[formcontrolname=\"description\"]').type('code hosting platform');\ncy.get('[formcontrolname=\"body\"]').type('version control and collaboration, lets you and others work together on projects from anywhere.');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('version control and collaboration, lets you and others work together on projects from anywhere.');\n  expect(xhr.response.body.article.description).to.equal('code hosting platform');\n});",
              "err": {},
              "uuid": "0a47e8d8-7253-432e-978d-da7ff9c4a3aa",
              "parentUUID": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend / refactoring use intercept Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d0d7bc90-031f-41a1-badb-c0b0a1c0ef9e",
              "parentUUID": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object ",
              "fullTitle": "Test with backend / refactoring use intercept should gave tags with routing object ",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//looking in json file mocked the co\n//cy.wait(20000)\ncy.get('div .tag-list').should('contain', 'cypress').should('contain', 'automation').should('contain', 'testing');",
              "err": {},
              "uuid": "c1c6bfb2-70a9-4a71-be13-304c9bf8e792",
              "parentUUID": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the local feed likes count",
              "fullTitle": "Test with backend / refactoring use intercept Verify the local feed likes count",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfButton) {\n  expect(listOfButton).to.contain('2');\n  expect(listOfButton[1]).to.contain('5');\n}); //create the route by call a fixture methode and read the fisture file articles.json\ncy.fixture('articles').then(function (file) {\n  var articlelink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file); //file is the respond of the link that we created\n}); //assertion \ncy.get('app-article-list button').eq(1).click().should('contain', '6'); //because is mocked test, we do not depend on the backend server",
              "err": {},
              "uuid": "55b071b2-1603-4fc3-9f5a-5e23e95c3c8f",
              "parentUUID": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete new article  in global feed",
              "fullTitle": "Test with backend / refactoring use intercept Delete new article  in global feed",
              "timedOut": null,
              "duration": 1935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//create a const for login and relocated at commands.js loginApplication()\n// const userCredentials =  { \"user\": {\n//   \"email\": \"cytest@test.com\",\n//   \"password\": \"Welcome123\"\n//  }\n// }\nvar bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API (Postman)\",\n    \"description\": \"Api testing is easy\",\n    \"body\": \"angular is cool\"\n  }\n}; //this are in comments because we relocated at command.js or loginApplication() so \n//we use instaed cy.get\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then( body => {\ncy.get('@token').then(function (token) {\n  //2. second request from articles\n  cy.request({\n    url: 'https://api.realworld.io/api/articles',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'POST',\n    body: bodyRequest //const created to save the body request\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  }); //we need go into global feed\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click(); //need request our article is successfully deleted.request the list by using API\n  //verifying the first artile of the list DO NOT have text \"Request from API (Postman)\" como arriba que creamos nosotros\n  cy.request({\n    url: 'https://api.realworld.io/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    //la variable guardada como se muestra en postman\n    method: 'GET'\n  }).its('body').then(function (body) {\n    //console.log(body) //aqui probammos que en consola se imprima la lista articulos\n    expect(body.articles[0].title).not.equal('Request from API (Postman)');\n  });\n});",
              "err": {},
              "uuid": "53775f9d-8dcd-4c63-a207-285ce7f697e1",
              "parentUUID": "0c5a131d-bb7c-4eda-984a-2890b6ad6dd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a47e8d8-7253-432e-978d-da7ff9c4a3aa",
            "c1c6bfb2-70a9-4a71-be13-304c9bf8e792",
            "55b071b2-1603-4fc3-9f5a-5e23e95c3c8f",
            "53775f9d-8dcd-4c63-a207-285ce7f697e1"
          ],
          "failures": [],
          "pending": [
            "d0d7bc90-031f-41a1-badb-c0b0a1c0ef9e"
          ],
          "skipped": [],
          "duration": 8339,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "341b6f13-07d5-49fb-acc1-453585c4894a",
      "title": "",
      "fullFile": "cypress\\integration\\firstTest.spec.js",
      "file": "cypress\\integration\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e283b07e-bcf6-4315-aaec-333f37f31502",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 2978,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:120:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "339234df-6814-4d60-bfbe-1ec435b0a625",
              "parentUUID": "e283b07e-bcf6-4315-aaec-333f37f31502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3340,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', (req) => {\n//     req.body.article.description = \"This is a descritption 2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a descritption');\n    res.body.article.description = \"This is a descritption 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a descritption');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a descritption 2');\n});",
              "err": {
                "message": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1MTU4LCJleHAiOjE2NTM3NjkxNTh9.kZWTRbMMRVbg_h2gvc2IHOLJwKyDskQl37EVyuV1pps\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:19:20 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2BO8lKUWy9bhphX4FlJOav9riHYEA5v6XM2EQ8VPGg6xkE4Pk89CbGulHDDFIzPbsaEWCKfHshPl5Tx22SzRTUtNMqLSmPwVWGgmWShUDyLcTSVcdDjSFXxqNiatbDNSYti3pG0JQYcnQHobydw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b4cc4ce1319db-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.",
                "estack": "CypressError: The following error originated from your test code, not from Cypress.\n\n  > A response callback passed to `req.reply()` threw an error while intercepting a response:\n\nCannot read property 'description' of undefined\n\nRoute: {\n  \"matchUrlAgainstPath\": true,\n  \"method\": \"POST\",\n  \"url\": \"**/articles\"\n}\n\nIntercepted request: {\n  \"headers\": {\n    \"host\": \"conduit.productionready.io\",\n    \"connection\": \"keep-alive\",\n    \"content-length\": \"130\",\n    \"accept\": \"application/json\",\n    \"authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1MTU4LCJleHAiOjE2NTM3NjkxNTh9.kZWTRbMMRVbg_h2gvc2IHOLJwKyDskQl37EVyuV1pps\",\n    \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n    \"content-type\": \"application/json\",\n    \"origin\": \"http://localhost:4200\",\n    \"sec-fetch-site\": \"cross-site\",\n    \"sec-fetch-mode\": \"cors\",\n    \"sec-fetch-dest\": \"empty\",\n    \"referer\": \"http://localhost:4200/editor\",\n    \"accept-encoding\": \"gzip, deflate, br\",\n    \"accept-language\": \"en-US\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": \"POST\",\n  \"httpVersion\": \"1.1\",\n  \"body\": {\n    \"article\": {\n      \"tagList\": [],\n      \"title\": \"This is a title\",\n      \"description\": \"This is a descritption\",\n      \"body\": \"This is a body of the Article\"\n    }\n  },\n  \"responseTimeout\": 30000\n}\n\nIntercepted response: {\n  \"headers\": {\n    \"date\": \"Tue, 29 Mar 2022 20:19:20 GMT\",\n    \"content-length\": \"0\",\n    \"connection\": \"keep-alive\",\n    \"location\": \"https://api.realworld.io/api/articles/\",\n    \"access-control-allow-origin\": \"*\",\n    \"access-control-allow-headers\": \"*\",\n    \"access-control-allow-methods\": \"GET,HEAD,POST,OPTIONS,PUT,PATCH,DELETE\",\n    \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n    \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2BO8lKUWy9bhphX4FlJOav9riHYEA5v6XM2EQ8VPGg6xkE4Pk89CbGulHDDFIzPbsaEWCKfHshPl5Tx22SzRTUtNMqLSmPwVWGgmWShUDyLcTSVcdDjSFXxqNiatbDNSYti3pG0JQYcnQHobydw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n    \"vary\": \"Accept-Encoding\",\n    \"server\": \"cloudflare\",\n    \"cf-ray\": \"6f3b4cc4ce1319db-EWR\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n  },\n  \"url\": \"https://conduit.productionready.io/api/articles/\",\n  \"method\": null,\n  \"httpVersion\": \"1.1\",\n  \"statusCode\": 307,\n  \"statusMessage\": \"Temporary Redirect\",\n  \"body\": \"\"\n}\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:164873:65\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromiseCtx (http://localhost:4200/__cypress/runner/cypress_runner.js:8613:10)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5295:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)\n\nFrom response callback:\n  TypeError: Cannot read property 'description' of undefined\n      at Object.eval [as responseHandler] (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:131:33)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:140:8)",
                "diff": null
              },
              "uuid": "a55e83ba-6260-4224-90fb-67f1b0d7f27c",
              "parentUUID": "e283b07e-bcf6-4315-aaec-333f37f31502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "1a5af415-b482-4185-820f-f3730c15fc20",
              "parentUUID": "e283b07e-bcf6-4315-aaec-333f37f31502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1597,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n});\ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(function (listOfbuttons) {\n  expect(listOfbuttons[0]).to.contain('1');\n  expect(listOfbuttons[1]).to.contain('5');\n});\ncy.fixture('articles').then(function (file) {\n  var articleLink = file.articles[1].slug;\n  cy.intercept('POST', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {
                "message": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'",
                "estack": "AssertionError: expected '<button.btn.btn-sm.btn-outline-primary>' to contain '1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:161:35)",
                "diff": null
              },
              "uuid": "faa81826-e71e-4812-8651-3b8958530b0e",
              "parentUUID": "e283b07e-bcf6-4315-aaec-333f37f31502",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 1384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from API\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n};\ncy.get('@token').then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.request({\n    url: Cypress.env('apiUrl') + 'api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(function (body) {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1MTY4LCJleHAiOjE2NTM3NjkxNjh9.ue1_55UMrR8Ybcl45FhG7LyvY-qNmXvv88b1G_k-zx8\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:19:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=t8F3HBGrXDR5rRFxq3RXvsfljg0TMYe%2B4%2FKss5HkGN29Rcan7cVQMMEQX55nMCj1RZKrSh9vyD6uPi9bFZJEb3%2F9uru4KxmAAfBU6g4pKKfItLCPtLiQaQp9UAErZC%2BXOfbR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b4cfbab998c83-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImN5dGVzdEB0ZXN0LmNvbSIsInVzZXJuYW1lIjoiQ3lUZXN0IiwiaWF0IjoxNjQ4NTg1MTY4LCJleHAiOjE2NTM3NjkxNjh9.ue1_55UMrR8Ybcl45FhG7LyvY-qNmXvv88b1G_k-zx8\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.2.0 Chrome/87.0.4280.67 Electron/11.0.3 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 114,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 29 Mar 2022 20:19:29 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=t8F3HBGrXDR5rRFxq3RXvsfljg0TMYe%2B4%2FKss5HkGN29Rcan7cVQMMEQX55nMCj1RZKrSh9vyD6uPi9bFZJEb3%2F9uru4KxmAAfBU6g4pKKfItLCPtLiQaQp9UAErZC%2BXOfbR\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"6f3b4cfbab998c83-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:159018:21\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:10584:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:8519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:8576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:8621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:8701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:5291:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:5284:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5300:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5170:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\firstTest.spec.js:180:10)",
                "diff": null
              },
              "uuid": "fe22f700-f96c-423c-8b6a-3f279214f0a1",
              "parentUUID": "e283b07e-bcf6-4315-aaec-333f37f31502",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a5af415-b482-4185-820f-f3730c15fc20"
          ],
          "failures": [
            "339234df-6814-4d60-bfbe-1ec435b0a625",
            "a55e83ba-6260-4224-90fb-67f1b0d7f27c",
            "faa81826-e71e-4812-8651-3b8958530b0e",
            "fe22f700-f96c-423c-8b6a-3f279214f0a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}